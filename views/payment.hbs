<!DOCTYPE html>
<html lang="en">
    {{> head }}
<body>
    {{> navbar }}
    <main>
        <div class="tabs" style="justify-content: center; display: flex;">
        <h1>Checkout</h1>
        </div>

        <!-- Cart Items -->
        <div class="cart-items">
            {{#each cartItems}}
            <div class="cart-item">
                <img src="{{this.productId.imagePath}}" alt="{{this.productId.productName}}">
                <div class="cart-item-details">
                    <h3>{{this.productId.productName}}</h3>
                    <p>Price: ₹{{this.productId.sellingPrice}}</p>
                    <p>Quantity: {{this.quantity}}</p>
                </div>
            </div>
            {{/each}}
        </div>

        <!-- Total Section -->
        <div class="total-section">
            <h2>Order Summary</h2>
    <div class="total-breakdown">
        <span>Subtotal</span>
        <span>₹{{subTotal}}</span>
    </div>
    {{!-- <div class="total-breakdown">
        <span>Tax (10%)</span>
        <span>₹{{tax}}</span>
    </div> --}}
    <div class="total-breakdown">
        <span>Shipping</span>
        <span>₹{{shippingCharges}}</span>
    </div>
    <div class="total-breakdown">
        <span>Total</span>
        <span class="total-price">₹{{total}}</span>
    </div>
    {{!-- <button class="checkout-btn">Proceed to Checkout</button> --}}
        </div>

        <!-- Payment Form -->
        <div class="checkout-form">
            <h2>Payment Options</h2>
            <div class="form-group">
                <input type="hidden" name="userId" value="{{userId}}" id="userId">
                <input type="hidden" name="name" value="{{name}}" id="name">
                <input type="hidden" name="email" value="{{email}}" id="email">
                <input type="hidden" name="contact" value="{{contact}}" id="contact">
                <input type="hidden" name="total" value="{{total}}" id="total">
                <label for="paymentMethod">Payment Method</label>
                <select id="paymentMethod" name="paymentMethod" required>
                    <option value="online">UPI / Online</option>
                    <option value="cod">Cash on Delivery</option>
                </select>
            </div>
            <button type="button" id="pay-btn" class="pay-now-btn">Pay Now</button>
        </div>
    </main>

    <!-- Footer -->
    {{> footer }}

</body>
</html>


<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function () {
    const payBtn = document.getElementById('pay-btn');
    const paymentMethod = document.getElementById('paymentMethod');

    // Default: online
    let currentMethod = paymentMethod.value;

    paymentMethod.addEventListener('change', function () {
        currentMethod = this.value;
        if (currentMethod === 'online') {
            payBtn.textContent = 'Pay Now';
        } else {
            payBtn.textContent = 'Place Order';
        }
    });

    payBtn.onclick = async function () {
        if (currentMethod === 'online') {
            // Razorpay logic (as before)
            const response = await fetch('/create-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({currency: 'INR', receipt: 'receipt#1' })
            });
            const order = await response.json();
            const options = {
                key: 'rzp_live_0IqEWbEHSYcuGQ',
                amount: order.amount,
                currency: order.currency,
                name: 'Shilpp',
                description: 'Test Transaction',
                order_id: order.id,
                handler: function (response) {
                    fetch('/verifyOrder', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'x-razorpay-signature': response.razorpay_signature
                        },
                        body: JSON.stringify({ 
                            payment_id: response.razorpay_payment_id, 
                            order_id: order.id 
                        })
                    })
                    .then(res => res.json())
                    .then(data => {
                        if (data.success) {
                            window.location.href = `/success?orderId=${data.orderId}`;
                        } else {
                            alert('Payment verification failed: ' + data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred during payment verification');
                    });
                },
                prefill: {
                    name: document.getElementById('name').value,
                    email: document.getElementById('email').value,
                    contact: document.getElementById('contact').value
                }
            };
            const rzp1 = new Razorpay(options);
            rzp1.open();
        } else if (currentMethod === 'cod') {
            // COD logic: create order directly and redirect to success
            payBtn.disabled = true;
            payBtn.textContent = 'Placing Order...';
            const res = await fetch('/create-cod-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    userId: document.getElementById('userId').value,
                    name: document.getElementById('name').value,
                    email: document.getElementById('email').value,
                    contact: document.getElementById('contact').value,
                    total: document.getElementById('total').value
                })
            });
            const data = await res.json();
            if (data.success) {
                window.location.href = `/success?orderId=${data.orderId}`;
            } else {
                alert('Order failed: ' + (data.message || 'Unknown error'));
                payBtn.disabled = false;
                payBtn.textContent = 'Place Order';
            }
        }
    };
});
</script>