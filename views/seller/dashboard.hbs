<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Seller Dashboard - Shilpp</title>
    <link rel="stylesheet" href="https://cdn.hugeicons.com/font/hgi-stroke-rounded.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&family=Caveat:wght@700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/static/css/style.css">
</head>
<body>
    <header class="header">
            <div class="header-row">
                <a href="/" class="header-logo">
                    <img src="/static/images/SHILP INDIA with circle.png" alt="Shilp India"/>
                </a>
                <div class="header-icons">
                        <span class="user-greeting">Welcome, {{split seller.name " " 0}}</span>
                        <a href="/seller/logout" class="logout-btn"><i class="fas fa-sign-out-alt"></i></a>
                        <a href="/seller-info" class="auth-link"><i class="hgi hgi-stroke hgi-information-circle"></i></a>
                    </div>
            </div>
    </header>

    <div class="seller-dashboard">
        <a href="/seller-products/{{seller._id}}"><section class="seller-header-row">
            <h1>{{seller.shopName}}</h1>
            {{#if seller.brandLogo}}<img class="seller-product-logo" src="{{seller.brandLogo}}">{{/if}}
        </section></a>
        <div class="dashboard-stats">
            <div class="stat-card">
                <a href="#products-section">
                    <i class="fas fa-box"></i>
                    <h3>Total Products</h3>
                    <p>{{products.length}}</p>
                </a>
            </div>
            <div class="stat-card">
                <a href="#orders-section">
                    <i class="fas fa-shopping-cart"></i>
                    <h3>Total Orders</h3>
                    <p>{{orders.length}}</p>
            </a>
            </div>
        </div>
            <button class="add-product-btn" onclick="showAddProductForm()">
                <i class="fas fa-plus"></i> Add New Product
            </button>

        <div class="dashboard-content">
            <div class="products-section" id="products-section">
                <h3><i class="fas fa-store"></i> Your Products</h3>
                <div class="products-grid">
                    {{#each products}}
                    <div class="seller-product-card" data-id="{{this._id}}">
                        <div class="product-image">
                            <img src="{{this.imagePath}}" alt="{{this.productName}}">
                            <div class="product-actions">
                                <button onclick="showEditProductForm(
    '{{this._id}}',
    '{{jsEscape this.productName}}',
    {{this.price}},
    '{{jsEscape this.description}}',
    '{{jsEscape this.tags}}',
    {{this.inventory}},
    {{#if this.width}}{{this.width}}{{else}}0{{/if}},
    {{#if this.length}}{{this.length}}{{else}}0{{/if}},
    {{#if this.height}}{{this.height}}{{else}}0{{/if}},
    {{#if this.weight}}{{this.weight}}{{else}}0{{/if}},
    {{#if this.isHandmade}}true{{else}}false{{/if}},
    '{{jsEscape this.material}}',
    '{{jsEscape this.otherSpecs}}',
    '{{jsEscape this.careInstructions}}',
    '{{this.category}}',
    '{{this.subCategory}}',
    '{{this.subSubCategory}}',
    {{#if this.isCustomizable}}true{{else}}false{{/if}},
    '{{jsEscape this.customizationLabel}}',
    '{{this.customizationType}}'
)">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button onclick="deleteProduct('{{this._id}}')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                        <div class="product-info">
                            <h4>
                                <span class="verified-badge">
                                {{#if this.isVerified}}
                                    <i class="fa-solid fa-certificate" id="verified"></i>
                                {{else}}
                                    <i class="fa-solid fa-clock" id="notVerified"></i>
                                {{/if}}
                                </span>{{this.productName}}
                            </h4>
                            <p class="price">₹{{this.price}}</p>
                        </div>
                    </div>
                    {{/each}}
                </div>
            </div>

            <div class="orders-section" id="orders-section">
                <h3><i class="fas fa-shopping-bag"></i> Recent Orders</h3>
                <div class="orders-grid">
                    {{#each orders}}
                    <div class="order-card">
                        <div class="order-header">
                            <span class="order-id">#{{this._id}}</span>
                            <span class="order-status {{this.adminShippingStatus}}">
                            {{#if (eq this.adminShippingStatus "delivered-to-admin")}}
                                Delivered
                            {{else}}
                                {{this.adminShippingStatus}}
                            {{/if}}
                            </span>
                        </div>
                        <div class="order-items">
                            {{#each this.items}}
                            <div class="order-item">
                                <span>{{this.productId.productName}} × {{this.quantity}}</span>
                                <span>₹{{this.price}}</span>
                            </div>
                            {{/each}}
                        </div>
                        <div class="order-footer">
                            <span class="order-total">Total: ₹{{this.totalAmount}}</span>
                            <select onchange="updateOrderStatus('{{this._id}}', this.value)" class="status-select">
                                <option value="pending" {{#if (eq this.shippingStatus 'pending')}}selected{{/if}}>Pending</option>
                                <option value="processing" {{#if (eq this.shippingStatus 'processing')}}selected{{/if}}>Processing</option>
                                <option value="shipped" {{#if (eq this.shippingStatus 'shipped')}}selected{{/if}}>Shipped</option>
                                <option value="delivered" {{#if (eq this.shippingStatus 'delivered')}}selected{{/if}}>Delivered</option>
                            </select>
                        </div>
                    </div>
                    {{/each}}
                </div>
            </div>
        </div>
    </div>

    <!-- Add Product Modal -->
    <div id="productModal" class="modal">
        <div class="modal-content">
            <span class="close-btn" onclick="closeModal()">&times;</span>
            <h3 id="modalTitle">Add New Product</h3>
            <p style="font-size:0.98em; color:#888; margin-bottom:10px;">Fields marked with <span style="color:#e75480;">*</span> are required.</p>
            <form id="productForm" action="/seller/products/add" method="POST" enctype="multipart/form-data">
                <input type="hidden" id="productId" name="productId">
                <div class="form-group">
                    <label>Product Name <span style="color:#e75480;">*</span></label>
                    <input type="text" id="productName" name="productName" required>
                </div>
                <hr class="modal-separator">

                <div class="form-group">
                    <label>Price (₹) <span style="color:#e75480;">*</span></label>
                    <input type="number" id="price" name="price" required>
                </div>
                <hr class="modal-separator">

                <div class="form-group">
                    <label>Description <span style="color:#e75480;">*</span></label>
                    <textarea id="description" name="description" rows="3" placeholder="Product Description" required style="resize:vertical;"></textarea>
                </div>
                <hr class="modal-separator">

                <div class="form-group">
                    <label>Available Quantity <span style="color:#e75480;">*</span></label>
                    <input type="number" id="inventory" name="inventory" placeholder="Available Quantity" required min="0">
                </div>
                <hr class="modal-separator">

                <div class="form-group">
                    <label>Category 1<span style="color:#e75480;">*</span></label>
                    <select name="category" id="category" required>
                        <option value="">-- Select a Category --</option>
                        <option value="home-living">Home & Living</option>
                        <option value="art-wall-decor">Art & Wall Decor</option>
                        <option value="stationery-paper-goods">Stationery & Paper Goods</option>
                        <option value="jewelry-accessories">Jewelry & Accessories</option>
                        <option value="toys-games">Toys & Games</option>
                        <option value="fashion-wearables">Fashion & Wearables</option>
                        <option value="festive-seasonal">Festive & Seasonal</option>
                        <option value="diy-craft-supplies">DIY & Craft Supplies</option>
                        <option value="handmade-gifts">Handmade Gifts</option>
                        <option value="personalized-products">Personalized Products</option>
                        <option value="wellness-selfcare">Wellness & Self-care</option>
                        <option value="kids-baby">Kids & Baby</option>
                        <option value="eco-friendly">Eco-Friendly & Sustainable</option>
                        <option value="office-work-essentials">Office & Work Essentials</option>
                        <option value="spiritual-religious">Spiritual & Religious</option>
                        <option value="plants-planters">Plants & Planters</option>
                        <option value="custom-art-portraits">Custom Art & Portraits</option>
                        <option value="collectibles-memorabilia">Collectibles & Memorabilia</option>
                        <option value="pet-accessories-gifts">Pet Accessories & Gifts</option>
                        <option value="kitchen-dining">Kitchen & Dining</option>
                        <option value="other">Other</option>
                    </select>
                    <label>Category 2<span style="color:#e75480;">*</span></label>
                    <select name="subCategory" id="subCategory" required>
                        <option value="">-- Select a Category --</option>
                        <option value="home-living">Home & Living</option>
                        <option value="art-wall-decor">Art & Wall Decor</option>
                        <option value="stationery-paper-goods">Stationery & Paper Goods</option>
                        <option value="jewelry-accessories">Jewelry & Accessories</option>
                        <option value="toys-games">Toys & Games</option>
                        <option value="fashion-wearables">Fashion & Wearables</option>
                        <option value="festive-seasonal">Festive & Seasonal</option>
                        <option value="diy-craft-supplies">DIY & Craft Supplies</option>
                        <option value="handmade-gifts">Handmade Gifts</option>
                        <option value="personalized-products">Personalized Products</option>
                        <option value="wellness-selfcare">Wellness & Self-care</option>
                        <option value="kids-baby">Kids & Baby</option>
                        <option value="eco-friendly">Eco-Friendly & Sustainable</option>
                        <option value="office-work-essentials">Office & Work Essentials</option>
                        <option value="spiritual-religious">Spiritual & Religious</option>
                        <option value="plants-planters">Plants & Planters</option>
                        <option value="custom-art-portraits">Custom Art & Portraits</option>
                        <option value="collectibles-memorabilia">Collectibles & Memorabilia</option>
                        <option value="pet-accessories-gifts">Pet Accessories & Gifts</option>
                        <option value="kitchen-dining">Kitchen & Dining</option>
                        <option value="other">Other</option>
                    </select>
                    <label>Category 3</label>
                    <select name="subSubCategory" id="subSubCategory">
                        <option value="">-- Select a Category --</option>
                        <option value="home-living">Home & Living</option>
                        <option value="art-wall-decor">Art & Wall Decor</option>
                        <option value="stationery-paper-goods">Stationery & Paper Goods</option>
                        <option value="jewelry-accessories">Jewelry & Accessories</option>
                        <option value="toys-games">Toys & Games</option>
                        <option value="fashion-wearables">Fashion & Wearables</option>
                        <option value="festive-seasonal">Festive & Seasonal</option>
                        <option value="diy-craft-supplies">DIY & Craft Supplies</option>
                        <option value="handmade-gifts">Handmade Gifts</option>
                        <option value="personalized-products">Personalized Products</option>
                        <option value="wellness-selfcare">Wellness & Self-care</option>
                        <option value="kids-baby">Kids & Baby</option>
                        <option value="eco-friendly">Eco-Friendly & Sustainable</option>
                        <option value="office-work-essentials">Office & Work Essentials</option>
                        <option value="spiritual-religious">Spiritual & Religious</option>
                        <option value="plants-planters">Plants & Planters</option>
                        <option value="custom-art-portraits">Custom Art & Portraits</option>
                        <option value="collectibles-memorabilia">Collectibles & Memorabilia</option>
                        <option value="pet-accessories-gifts">Pet Accessories & Gifts</option>
                        <option value="kitchen-dining">Kitchen & Dining</option>
                        <option value="other">Other</option>
                    </select>
                </div>
                <hr class="modal-separator">

                <div class="form-group">
                    <label>Search Tags (comma-separated) <span style="color:#e75480;">*</span></label>
                    <input type="text" id="tags" name="tags" placeholder="eg. gift, mother's day, diwali, festival, couples, girlfriend, Jewelry..." required>
                </div>
                <hr class="modal-separator">

                <div class="form-group">
                    <label>Product Images <span style="color:#e75480;">*</span></label>
                    <div id="imageInputsContainer">
                        <!-- Image inputs will be added here -->
                    </div>
                    <button type="button" id="addImageBtn" class="add-image-btn" style="margin-top:10px;">
                        <i class="fas fa-plus"></i> Add Image
                    </button>
                </div>
                <hr class="modal-separator">

                <div class="form-group">
                    <label>Product Videos</label>
                    <div class="form-guidelines" style="font-size:0.95em; color:#888; margin-bottom:6px;">
                        <ul style="margin:0 0 6px 18px; padding:0;">
                            <li>Maximum 2 videos allowed</li>
                            <li>Each video must be ≤ 30 seconds</li>
                            <li>Only landscape videos are allowed</li>
                        </ul>
                    </div>
                    <div id="videoInputsContainer">
                        <!-- Video inputs will be added here -->
                    </div>
                    <button type="button" id="addVideoBtn" class="add-image-btn" style="margin-top:10px;">
                        <i class="fas fa-plus"></i> Add Video
                    </button>
                </div>
                <hr class="modal-separator">

                <div class="form-group" style="display: flex; gap: 12px; flex-wrap: wrap;">
                    <div style="flex:1; min-width:120px;">
                        <label>Width (inches) <span style="color:#e75480;">*</span></label>
                        <input type="number" id="width" name="width" min="0" step="0.01" placeholder="Width" required>
                    </div>
                    <div style="flex:1; min-width:120px;">
                        <label>Length (inches) <span style="color:#e75480;">*</span></label>
                        <input type="number" id="length" name="length" min="0" step="0.01" placeholder="Length" required>
                    </div>
                    <div style="flex:1; min-width:120px;">
                        <label>Height/Thickness (inches)</label>
                        <input type="number" id="height" name="height" min="0" step="0.01" placeholder="Height/Thickness">
                    </div>
                    <div style="flex:1; min-width:120px;">
                        <label>Weight (kg)</label>
                        <input type="number" id="weight" name="weight" min="0" step="0.01" placeholder="Weight">
                    </div>
                </div>
                <hr class="modal-separator">

                <div class="form-group" style="display: flex; flex-direction: row; align-items: center; gap: 12px;">
                    <input type="checkbox" id="isHandmade" name="isHandmade" style="width:18px; height:18px;">
                    <label for="isHandmade" style="margin:0;">This product is handmade?</label>
                </div>
                <hr class="modal-separator">

                <div class="form-group" style="display: flex; flex-direction: row; align-items: center; gap: 12px;">
                    <label>
                        <input type="checkbox" id="isCustomizable" name="isCustomizable" style="width:18px; height:18px;" onchange="toggleCustomizationFields()">
                        Is this product customizable for customers?
                    </label>
                </div>

                <div id="customizationFields" style="display:none;">
                  <div class="form-group" >
                    <label>
                      Customization Label (max 50 chars)
                    </label>
                      <input type="text" name="customizationLabel" id="customizationLabel" maxlength="50" placeholder="eg. Select your photo">
                  </div>
                  <div class="form-group">
                    <label>
                      Customization Type
                    </label>
                      <select name="customizationType" id="customizationType">
                        <option value="">Select type</option>
                        <option value="text">Text</option>
                        <option value="image">Image</option>
                        <option value="both">Both</option>
                      </select>
                  </div>
                </div>
                <hr class="modal-separator">

                <div class="form-group">
                    <label>Material <span style="color:#e75480;">*</span></label>
                    <input type="text" id="material" name="material" placeholder="e.g. Wood, Resin, Cotton" required>
                </div>
                <hr class="modal-separator">

                <div class="form-group">
                    <label>Other Specifications</label>
                    <textarea id="otherSpecs" name="otherSpecs" rows="2" placeholder="Any other product specifications (optional)" style="resize:vertical;"></textarea>
                </div>
                <hr class="modal-separator">

                <div class="form-group">
                    <label>Care Instructions</label>
                    <textarea id="careInstructions" name="careInstructions" rows="2" placeholder="How to care for this product (optional)" style="resize:vertical;"></textarea>
                </div>
                <hr class="modal-separator">

                <div class="form-group" style="margin-bottom: 0; display: flex; flex-direction: row;">
                    <input type="checkbox" id="agreement1" name="agreement1" required style="width:18px; height:18px;">
                    <label for="agreement1" style="display:inline;">
                        I confirm that this product is real, and I agree to deliver it within 3 days of receiving the order. I understand that any type of cheating or malpractices will not be tolerated. <span style="color:#e75480;">*</span>
                    </label>
                </div>
                <div class="form-group" style="margin-bottom: 0; display: flex; flex-direction: row;">
                    <input type="checkbox" id="agreement2" name="agreement2" required style="width:18px; height:18px;">
                    <label for="agreement2" style="display:inline;">
                        I understand that Shilpp will sell these products with an incremental price to cover delivery and other required charges. <span style="color:#e75480;">*</span>
                    </label>
                </div>
                <button type="submit" class="submit-btn" id="submitProductBtn" disabled>
                    <i class="fas fa-save"></i> Save Product
                </button>
            </form>
        </div>
    </div>

    <script>
        // Set your size limit (in bytes)
        const MAX_FILE_SIZE = 30 * 1024 * 1024; // 30MB

        function showAddProductForm() {
            document.getElementById('modalTitle').textContent = 'Add New Product';
            document.getElementById('productForm').action = '/seller/products/add';
            document.getElementById('productId').value = '';
            document.getElementById('productForm').reset();
            document.getElementById('productModal').style.display = 'block';
        }

        function showEditProductForm(
            id,
            name,
            price,
            description,
            tags,
            inventory,
            width,
            length,
            height,
            weight,
            isHandmade,
            material,
            otherSpecs,
            careInstructions,
            category,
            subCategory,
            subSubCategory,
            isCustomizable,
            customizationLabel,
            customizationType,
        ) {
            document.getElementById('modalTitle').textContent = 'Edit Product';
            document.getElementById('productForm').action = `/seller/products/update/${id}`;
            document.getElementById('productId').value = id;
            document.getElementById('productName').value = name;
            document.getElementById('price').value = price;
            document.getElementById('description').value = description;
            document.getElementById('tags').value = tags;
            document.getElementById('inventory').value = inventory;
            document.getElementById('width').value = width || '';
            document.getElementById('length').value = length || '';
            document.getElementById('height').value = height || '';
            document.getElementById('weight').value = weight || '';
            document.getElementById('material').value = material || '';
            document.getElementById('otherSpecs').value = otherSpecs || '';
            document.getElementById('careInstructions').value = careInstructions || '';
            document.getElementById('isHandmade').checked = !!isHandmade;

            // Prefill categories
            document.getElementById('category').value = category || '';
            document.getElementById('subCategory').value = subCategory || '';
            document.getElementById('subSubCategory').value = subSubCategory || '';

            // Customization fields
            document.getElementById('isCustomizable').checked = !!isCustomizable;
            toggleCustomizationFields();
            document.getElementById('customizationLabel').value = customizationLabel || '';
            document.getElementById('customizationType').value = customizationType || '';

            // Agreements must be checked to enable submit
            document.getElementById('agreement1').checked = false;
            document.getElementById('agreement2').checked = false;
            document.getElementById('submitProductBtn').disabled = true;

            // Make all image inputs NOT required when editing
            const imageInputs = document.querySelectorAll('#imageInputsContainer input[type="file"]');
            imageInputs.forEach(input => input.required = false);

            document.getElementById('productModal').style.display = 'block';
        }

        function closeModal() {
            document.getElementById('productModal').style.display = 'none';
        }

        function deleteProduct(productId) {
            if(confirm('Are you sure you want to delete this product?')) {
                fetch(`/seller/products/delete/${productId}`, {
                    method: 'DELETE'
                }).then(response => {
                    if(response.ok) {
                        location.reload();
                    }
                });
            }
        }

        function updateOrderStatus(orderId, status) {
            fetch(`/seller/orders/update-status/${orderId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                credentials: 'same-origin',
                body: JSON.stringify({ status })
            })
            .then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    console.error('Failed to update:', response.status);
                    response.text().then(text => console.error('Server response:', text));
                }
            })
            .catch(err => console.error('Fetch error:', err));
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            if (event.target == document.getElementById('productModal')) {
                closeModal();
            }
        }

        // Add multiple image input fields dynamically
        document.addEventListener('DOMContentLoaded', function() {
            const imageInputsContainer = document.getElementById('imageInputsContainer');
            const addImageBtn = document.getElementById('addImageBtn');

            function createImageInput() {
                const wrapper = document.createElement('div');
                wrapper.className = 'image-input-wrapper';
                wrapper.style.display = 'flex';
                wrapper.style.alignItems = 'center';
                wrapper.style.gap = '8px';
                wrapper.style.marginBottom = '8px';

                // Error message element
                const errorDiv = document.createElement('div');
                errorDiv.className = 'input-error';
                errorDiv.style.color = '#e75480';
                errorDiv.style.fontSize = '0.95em';
                errorDiv.style.marginBottom = '2px';
                errorDiv.style.flexBasis = '100%';

                const input = document.createElement('input');
                input.type = 'file';
                input.name = 'productImages';
                input.accept = 'image/*';
                input.required = imageInputsContainer.childElementCount === 0; // Only first is required

                input.onchange = function() {
                    errorDiv.textContent = '';
                    const file = input.files[0];
                    if (!file) return;

                    if (file.size > MAX_FILE_SIZE) {
                        errorDiv.textContent = "Image file size must be less than 30MB.";
                        input.value = "";
                        return;
                    }
                    const validImageTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];
                    if (!validImageTypes.includes(file.type)) {
                        errorDiv.textContent = "Please upload a valid image file (jpg, png, gif, or webp).";
                        input.value = "";
                    }
                };

                const deleteBtn = document.createElement('button');
                deleteBtn.type = 'button';
                deleteBtn.className = 'delete-image-btn';
                deleteBtn.innerHTML = '<i class="fas fa-trash"></i>';
                deleteBtn.style.background = 'none';
                deleteBtn.style.border = 'none';
                deleteBtn.style.color = '#e75480';
                deleteBtn.style.cursor = 'pointer';
                deleteBtn.style.fontSize = '1.2rem';

                deleteBtn.onclick = function() {
                    wrapper.remove();
                    // Ensure at least one input is required
                    if (imageInputsContainer.childElementCount > 0) {
                        imageInputsContainer.firstElementChild.querySelector('input[type="file"]').required = true;
                    }
                };

                // Append errorDiv before input
                wrapper.appendChild(errorDiv);
                wrapper.appendChild(input);
                wrapper.appendChild(deleteBtn);
                return wrapper;
            }

            addImageBtn.onclick = function() {
                imageInputsContainer.appendChild(createImageInput());
                // Only the first input is required
                Array.from(imageInputsContainer.children).forEach((child, idx) => {
                    child.querySelector('input[type="file"]').required = idx === 0;
                });
            };

            // Add one image input by default
            imageInputsContainer.appendChild(createImageInput());
        });

        // Add multiple video input fields dynamically
        document.addEventListener('DOMContentLoaded', function() {
            const videoInputsContainer = document.getElementById('videoInputsContainer');
            const addVideoBtn = document.getElementById('addVideoBtn');

            function createVideoInput() {
                const wrapper = document.createElement('div');
                wrapper.className = 'video-input-wrapper';
                wrapper.style.display = 'flex';
                wrapper.style.alignItems = 'center';
                wrapper.style.gap = '8px';
                wrapper.style.marginBottom = '8px';

                // Error message element
                const errorDiv = document.createElement('div');
                errorDiv.className = 'input-error';
                errorDiv.style.color = '#e75480';
                errorDiv.style.fontSize = '0.95em';
                errorDiv.style.marginBottom = '2px';
                errorDiv.style.flexBasis = '100%';

                const input = document.createElement('input');
                input.type = 'file';
                input.name = 'productVideos';
                input.accept = 'video/*';

                input.onchange = function() {
                    errorDiv.textContent = '';
                    const file = input.files[0];
                    if (!file) return;

                    if (file.size > MAX_FILE_SIZE) {
                        errorDiv.textContent = "Video file size must be less than 30MB.";
                        input.value = "";
                        return;
                    }

                    if (!file.type.startsWith('video/')) {
                        errorDiv.textContent = "Please upload a valid video file.";
                        input.value = "";
                        return;
                    }

                    // Check duration and landscape
                    const url = URL.createObjectURL(file);
                    const video = document.createElement('video');
                    video.preload = 'metadata';
                    video.src = url;
                    video.onloadedmetadata = function() {
                        URL.revokeObjectURL(url);
                        if (video.duration > 30) {
                            errorDiv.textContent = "Video must be 30 seconds or less.";
                            input.value = "";
                            return;
                        }
                        if (video.videoWidth < video.videoHeight) {
                            errorDiv.textContent = "Only landscape videos are allowed.";
                            input.value = "";
                            return;
                        }
                    };
                };

                const deleteBtn = document.createElement('button');
                deleteBtn.type = 'button';
                deleteBtn.className = 'delete-video-btn';
                deleteBtn.innerHTML = '<i class="fas fa-trash"></i>';
                deleteBtn.style.background = 'none';
                deleteBtn.style.border = 'none';
                deleteBtn.style.color = '#e75480';
                deleteBtn.style.cursor = 'pointer';
                deleteBtn.style.fontSize = '1.2rem';

                deleteBtn.onclick = function() {
                    wrapper.remove();
                    if (videoInputsContainer.childElementCount < 2) {
                        addVideoBtn.disabled = false;
                    }
                };

                // Append errorDiv before input
                wrapper.appendChild(errorDiv);
                wrapper.appendChild(input);
                wrapper.appendChild(deleteBtn);
                return wrapper;
            }

            addVideoBtn.onclick = function() {
                if (videoInputsContainer.childElementCount < 2) {
                    videoInputsContainer.appendChild(createVideoInput());
                }
                if (videoInputsContainer.childElementCount >= 2) {
                    addVideoBtn.disabled = true;
                }
            };

            // Add one video input by default (optional, or leave empty)
            // videoInputsContainer.appendChild(createVideoInput());
        });

        document.addEventListener('DOMContentLoaded', function() {
            // Enable submit only if both agreements are checked
            const agreement1 = document.getElementById('agreement1');
            const agreement2 = document.getElementById('agreement2');
            const submitBtn = document.getElementById('submitProductBtn');

            function toggleSubmitBtn() {
                submitBtn.disabled = !(agreement1.checked && agreement2.checked);
            }

            agreement1.addEventListener('change', toggleSubmitBtn);
            agreement2.addEventListener('change', toggleSubmitBtn);

            // On modal open, reset submit button state
            window.showAddProductForm = function() {
                document.getElementById('modalTitle').textContent = 'Add New Product';
                document.getElementById('productForm').action = '/seller/products/add';
                document.getElementById('productId').value = '';
                document.getElementById('productForm').reset();
                submitBtn.disabled = true;
                document.getElementById('productModal').style.display = 'block';
            };
        });

        function toggleCustomizationFields() {
          const isCustom = document.getElementById('isCustomizable').checked;
          document.getElementById('customizationFields').style.display = isCustom ? 'block' : 'none';
          if (!isCustom) {
            document.getElementById('customizationLabel').value = '';
            document.getElementById('customizationType').value = '';
          }
        }

    </script>
</body>
</html>